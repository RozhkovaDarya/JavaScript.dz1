// Задание 1

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Homework</title>
</head>
<body>
<!--
Обязательное задание.

Для кода вставленного в теге script необходимо дать комментарии, почему мы
получаем такой результат (в свободной форме).

Подсказка. Чтобы лучше разобраться возьмите этот код и запустите в отладчике в
браузере со включенными точками остановки.
-->
<script>
  "use strict";

  let a = 1, b = 1, c, d;

  /*
  Изначально дано:
  а === 1;
  b === 1;
  с === undefined;
  d === undefined;
  Затем мы прибавляем к переменной 'а' еденицу, получаем:
  a === 2;
  Переменной 'с' присваивается значение переменной 'a':
  c === 2;
  */
  c = ++a;
  console.log(c);

  /*
  Изначально дано:
  b === 1;
  d === undefined;
  Затем к переменной 'b' прибавляем еденицу:
  b === 2;
  Переменной 'd' присваевается значение переменной 'b' до увеличения:
  d === 1;
   */
  d = b++;
  console.log(d);

  /*
  Изначально дано:
  a === 2;
  с === 2;
  К переменной 'a' прибавляем еденицу, получаем:
  a === 3;
  Переменной 'c' присваевается значение суммы 2 плюс 'a':
  с === 5;
   */
  c = 2 + ++a;
  console.log(c);

  /*
  Изначально дано:
  b === 2;
  d === 1;
  К переменной 'b' прибавляем еденицу, получаем:
  b === 3;
  Переменной 'd' присваевается значение суммы 2 плюс 'b' 
  до прибавления еденицы, то есть 2 + 2:
  d === 4;
   */
  d = 2 + b++;
  console.log(d);

  /*
  Итоговые данные:
  a === 3;
  b === 3;
  c === 5;
  d === 4;
  */

  console.log(a);
  console.log(b);
</script>
</body>
</html>
*********************************************************

// Задание 2.

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Homework</title>
</head>
<body>
<!--
Обязательное задание.

Для кода вставленного в теге script необходимо дать комментарии, почему мы
получаем такой результат (в свободной форме).

Подсказка. Чтобы лучше разобраться возьмите этот код и запустите в отладчике в
браузере со включенными точками остановки.
-->
<script>
  "use strict";

  let a = 2;
  let x = 1 + (a *= 2);

  /*
  Переменной 'a' присвоено значение 2. Затем переменная 'a' умножается на 2, 
  получаем в переменной 'a' четыре:
  a === 4;
  Далее определяем переменную 'x': к переменной 'a' прибавляем еденицу, 
  получаем:
  x === 5;
  Итого в выводе получили:
  x === 5;
  a === 4;
   */
  console.log(x);
  console.log(a);

</script>
</body>
</html>
**************************************************

// Задание 3

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Homework</title>
</head>
<body>
<!--
Обязательное задание.

Необходимо попросить пользователя ввести два числа в переменные `a` и `b`.
Необходимо вывести в консоль один результат из следующих проверок:
1. Если оба числа в переменных `a` и `b` положительные, вывести разность
чисел `a` и `b`, а именно, вычесть из переменной `a` значение переменной `b`.
2. Если оба числа в переменных `a` и `b` отрицательные, вывести произведение
чисел `a` и `b`.
3. Если числа в переменных `a` и `b` разных знаков, вывести сумму чисел
`a` и `b`.
В остальных случаях программа не должна ничего выводить.
-->
<script>
  "use strict";

  const a = +prompt('Введите число: ');
  const b = +prompt('Введите второе число: ');

  if (a > 0 && b > 0) {
    console.log(a - b);
  } else if (a < 0 && b < 0) {
    console.log(a * b);
  } else if (a * b < 0) {
    console.log(a + b);
  }
</script>
</body>
</html>
************************************
// Задание 4.

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Homework</title>
</head>
<body>
<!--
Обязательное задание.

Необходимо реализовать четыре функции, каждая функция должна принимать по два
числа и выполнять одну из операций (каждая функция выполняет одну из них):
1. Сложение
2. Разность
3. Умножение
4. Деление

Необходимо сделать так, чтобы функция вернула число, например выражение
`console.log(sum(2, 6));` должно вывести число 8 в консоль (sum - функция
сложения в данном примере, ваши названия функций могут отличаться).

Округлять значения, которые возвращают функции не нужно, однако, обратите
внимание на разность, функция должна вычесть из большего числа меньшее, либо
вернуть 0, если числа равны.

Функциям всегда передаются корректные числа, проверки на NaN, Infinity делать
не нужно.

Необходимо для всех функций прописать комментарии jsdoc https://jsdoc.app/.
-->
<script>
  "use strict";

  /*
  Считает сумму переданных аргументов:
  @param {number} a - первое число;
  @param {number} b - второе число;
  @return {number} - сумма чисел;
  */
  function addition(a, b) {
    return a + b;
  }

  /*
  Считает разницу переданных аргументов:
  @param {number} a - первое число;
  @param {number} b - второе число;
  @return {number} - разница чисел;
  */
  function subtraction(a, b) {
    return Math.abs(a - b);
  }

  /*
  Считает произведение переданных аргументов:
  @param {number} a - первое число;
  @param {number} b - второе число;
  @return {number} - проиведение чисел;
  */
  function multiplication(a, b) {
    return a * b;
  }

  /*
  Считает частное переданных аргументов:
  @param {number} a - первое число;
  @param {number} b - второе число;
  @return {number} - частное чисел;
  */
  function division(a, b) {
    return a / b;
  }

</script>
</body>
</html>
************************************************************

// Задание 5.

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Homework</title>
</head>
<body>
<!--
Обязательное задание.

Необходимо скопировать и вставить в данный скрипт все функции из 4 задания.
Необходимо реализовать функцию:
mathOperation(arg1, arg2, operation);
Параметры:
arg1 - первое число.
arg2 - второе число.
operation - строка, которая содержит один символ из: "+", "-", "*", "/".
Функция mathOperation должна вернуть результат операции, который был передан в
параметр operation для двух первых аргументов (arg1 и arg2).
Функция mathOperation должна использовать для вычисления функции из 4 задания.

Примеры вызова функции:
console.log(mathOperation(5, 3, "+")); // 8
console.log(mathOperation(5, 3, ":)")); // NaN

Функции mathOperation всегда передаются корректные числа, проверки на NaN,
Infinity делать не нужно, однако, в случае если был передан некорректный
аргумент в параметр operation, необходимо вернуть NaN.

Необходимо для всех функций прописать комментарии jsdoc https://jsdoc.app/.
-->
<script>
  "use strict";

  /*
  Вычисляет операцию, между двумя первыми аргументами функции, 
  переданную в третий параметр:
  @param {number} arg1 - первое число;
  @param {number} arg2 - второе число;
  @param {string} operation - операция, одна из возможных строк:
  "+", "-", "*", "/".
  @return {number} - результат операции operation над первыми двумя аргументами
  функции. Может вернуть NaN, если operation или первые два аргумента заданы
  неверно.
  */
  function mathematicalOperation(arg1, arg2, operation) {
    switch (operation) {
      case '+': return addition(arg1, arg2);
      case '-': return subtraction(arg1, arg2);
      case '*': return multiplication(arg1, arg2);
      case '/': return division(arg1, arg2);
      default: return NaN;
    }
  }

  /*
  Считает сумму переданных аргументов:
  @param {number} a - первое число;
  @param {number} b - второе число;
  @return {number} - сумма чисел;
  */
  function addition(a, b) {
    return a + b;
  }

  /*
  Считает разницу переданных аргументов:
  @param {number} a - первое число;
  @param {number} b - второе число;
  @return {number} - разница чисел;
  */
  function subtraction(a, b) {
    return Math.abs(a - b);
  }

  /*
  Считает произведение переданных аргументов:
  @param {number} a - первое число;
  @param {number} b - второе число;
  @return {number} - проиведение чисел;
  */
  function multiplication(a, b) {
    return a * b;
  }

  /*
  Считает частное переданных аргументов:
  @param {number} a - первое число;
  @param {number} b - второе число;
  @return {number} - частное чисел;
  */
  function division(a, b) {
    return a / b;
  }

</script>
</body>
</html>
